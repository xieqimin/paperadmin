group 'com.wit.paperadmin'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    mybatisGenerator
}

// 读取config文件夹中对应的配置文件
ext{
    def prop = new Properties();
    file("src/main/resources/mybatis/jdbc-mysql.properties")
            .withInputStream {
        prop.load(it)
    }
    file("src/main/resources/mybatis/gradle.properties")
            .withInputStream {
        prop.load(it)
    }
    prop.each {
        project.extensions.add("$it.key",it.value);
    }
}

// 配置gradle的依赖项
dependencies {
    testCompile 'com.jayway.restassured:rest-assured:2.9.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'org.springframework:spring-test:4.2.5.RELEASE'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'com.jayway.restassured:json-schema-validator:2.9.0'
    testCompile 'com.jayway.restassured:spring-mock-mvc:2.9.0'
    testCompile "org.springframework.restdocs:spring-restdocs-restassured:1.1.0.RC1"
    compile group: 'commons-codec', name: 'commons-codec', version: '1.9'

    //maven仓库中心没有的jar，则放入libs目录下
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'org.springframework:spring-webmvc:4.2.5.RELEASE'
    compile 'org.springframework:spring-orm:4.2.5.RELEASE'
    compile 'org.springframework:spring-context-support:4.2.5.RELEASE'
    compile 'mysql:mysql-connector-java:5.1.38'
    compile 'org.mybatis:mybatis:3.4.0'
    compile 'org.mybatis:mybatis-spring:1.3.0'
    compile 'com.github.pagehelper:pagehelper:4.1.3'
    compile 'org.apache.shiro:shiro-spring:1.2.4'
    compile 'org.apache.shiro:shiro-web:1.2.4'
    compile 'org.slf4j:slf4j-log4j12:1.7.21'


    compile 'org.apache.tomcat:tomcat-jdbc:8.0.33'
    compile 'javax.mail:mail:1.4.7'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.3'
    compile 'org.aspectj:aspectjweaver:1.8.9'
    compile 'commons-fileupload:commons-fileupload:1.3.1'
    compile 'tk.mybatis:mapper:3.3.8'
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.7.3'

    //swagger
    compile "io.springfox:springfox-swagger2:2.4.0"
    compile 'io.springfox:springfox-swagger-ui:2.4.0'
    compile 'io.springfox:springfox-staticdocs:2.4.0'

    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:1.1.0.RC1'
    compile 'io.github.robwin:assertj-swagger:0.1.2'
    testCompile 'com.fasterxml.jackson.module:jackson-module-jsonSchema:2.4.0'


    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.38'
    mybatisGenerator 'tk.mybatis:mapper:3.3.8'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

// 利用ant创建一个自动生成MyBatis目录文件的task
task mybatisGenerate << {
    ant.properties['targetProject'] = projectDir.path
    ant.properties['jarDirection'] = project['jdbc.jarDirection']
    ant.properties['driverClass'] = project['jdbc.driverClassName']
    ant.properties['connectionURL'] = project['jdbc.url']
    ant.properties['userId'] = project['jdbc.user']
    ant.properties['password'] = project['jdbc.pass']
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = project['modelPackage']
    ant.properties['mapperPackage'] = project['mapperPackage']
    ant.properties['sqlMapperPackage'] = project['sqlMapperPackage']

    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )

    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/mybatis/generatorConfig.xml',
            verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'jarDirection')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}